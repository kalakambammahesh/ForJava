package com.testing;

import static org.junit.Assert.assertEquals;
import static org.junit.jupiter.api.Assertions.*;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.jupiter.api.Test;

class TestLogic {

	@BeforeClass  
    public static void setUpBeforeClass() throws Exception {  
        System.out.println("before class");  
    }  
    @Before  
    public void setUp() throws Exception {  
        System.out.println("before");  
    }  
  
    @Test  
    public void testFindMax(){  
        System.out.println("test case find max");  
        assertEquals(4,Calculation.findMax(new int[]{1,3,4,2}));  
        assertEquals(-2,Calculation.findMax(new int[]{-12,-3,-4,-2}));  
    }  
    @Test  
    public void testCube(){  
        System.out.println("test case cube");  
        assertEquals(27,Calculation.cube(3));  
    }  
    @Test  
    public void testReverseWord(){  
        System.out.println("test case reverse word");  
        assertEquals("ym eman si nahk ",Calculation.reverseWord("my name is khan"));  
    }  
    @After  
    public void tearDown() throws Exception {  
        System.out.println("after");  
    }  
  
    @AfterClass  
    public static void tearDownAfterClass() throws Exception {  
        System.out.println("after class");  
    }  
  
}
//Actual Class
package com.testing;

import java.util.StringTokenizer;

public class Calculation {

	public static int findMax(int[] arr) {
		int max = Integer.MIN_VALUE;
		
		for(int i = 0;i < arr.length;i++) {
			if(max < arr[i]) max = arr[i];
		}
		return max;
	}
	public static int cube(int n) {
		return n*n*n;
	}
	//method that resturns reverse words
	public static String reverseWord(String str) {
		//String str = "mahesh";
		StringBuilder result = new StringBuilder();
		StringTokenizer tokenizer = new StringTokenizer(str, " ");
		
		while(tokenizer.hasMoreTokens()) {
			StringBuilder sb = new StringBuilder();
			sb.append(tokenizer.nextToken());
			sb.reverse();
			
			result.append(sb);
			result.append(" ");
		}
		System.out.println(result);
		return result.toString();
	}
	public static void main(String[] args) {
		//Calculation.reverseWord();
	}
}
